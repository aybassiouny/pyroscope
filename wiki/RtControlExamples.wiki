#summary Real-world use-cases for rtcontrol.
#labels cli,shell
<wiki:toc max_depth="2" />

= Fundamentals =
`rtcontrol`'s main purpose is to take filter conditions on the command line of the form "_field_`=`_value_" and select a set of torrents according to them. All given conditions must be met (AND), and if a field name is omitted, "`name`" is assumed.

For numeric fields, a leading "`+`" means greater than, a leading "`-`" means less 
than (just like with the standard `find` command). For string fields, the value is a glob pattern which you are used to from shell filename patterns (`*`, `?`, `[a-z]`, `[!a-z]`).
Multiple values separated by a comma indicate several possible choices (OR).
"`!`" in front of a filter value negates it (NOT).

= Useful filter conditions =
The following conditions give you a hint on what you can do, and some building blocks for more complex conditions.

|| *Condition(s)*     || *Description* ||
|| `ratio=+1`         || All downloads seeded to at least 1:1 ||
|| `xfer=+0`          || All active torrents (transferring data) ||
|| `up=+0`            || All seeding torrents (uploading data) ||
|| `down=+0 down=-5k` || Slow torrents (downloading, but with < 5 KB/s) ||
|| `down=0 is_complete=no is_open=yes` || Stuck torrents ||
|| `size=+4g`         || Big stuff (DVD size or larger) ||
|| `is_complete=no`   || Incomplete downloads ||
|| `is_ghost=yes`     || Torrents that have no data (were never started or lost their data; _since v0.3.3_) ||
|| `alias=obt`        || Torrents tracked by `openbittorrent.com` (see UserConfiguration on how to add aliases for trackers) ||
|| `ratio=+1 realpath=\!/mnt/*` || 1:1 seeds not on a mounted path (i.e. likely on localhost) ||
|| `age=+2w`          || Older than 2 weeks (_not implemented yet_) ||
|| `kind=flac,mp3`    || Music downloads (_not implemented yet_) ||

Note that the `!` character has to be escaped in shell commands. For a current full list of all the field names and their meaning, see the output of `rtcontrol --help`.

= Reports =
You might want to add the following alias definitions to your `~/.bashrc`:
{{{
alias rthot="watch -n10 'rtcontrol -rs up,down,name xfer=+0 2>&1'"
alias rtmsg="rtcontrol -s alias,message,name 'message=?*' message=\!*Tried?all?trackers*"
alias rtmsgstats="rtcontrol -q -s alias,message -o alias,message 'message=?*' message=\!*Tried?all?trackers* | uniq -c"
}}}

`rthot` shows active torrents every 10 seconds (until you hit CTRL-C), `rtmsg` lists all torrents that have a non-trivial tracker message, and `rtmsgstats` prints a count of how many messages there are per unique combination of tracker and message text.


= Statistics =

Create a list of all your trackers and how many torrents are loaded for each:
{{{
rtcontrol -q -o alias -s alias \* | uniq -c
}}}
You can easily modify this by using conditions other than `*`, e.g. show the count of fully seeded downloads using `ratio=+1`.


= Ratio Management =

While rTorrent has a built-in form of ratio management since a few versions, it's hard to use after-the-fact and also hard to understand â€” you need to have different watch directories and complex settings in your `.rtorrent.rc`.

A basic form of ratio management using `rtcontrol` looks like this:
{{{
rtcontrol is_complete=yes is_open=yes ratio=+1.1 alias=sometracker,othertracker --stop
}}}
You will always want to have the `is_complete=yes is_open=yes ratio=+1.1` part, which excludes all torrents that are still downloading, closed or not having the necessary ratio. 

To that you can add anything you think fits your needs, and also use several commands with different minimum ratios for different trackers by selecting them using `alias` or `tracker`, like in the example above. Only your imagination (and the available fields) are the limit here.

If you then put these commands into a script that runs every few minutes via `cron`, you have a very flexible form of ratio management that can be changed on a whim. 

To complete your command line, you add the action you want to take on the torrents found, in the above example `--stop`. Later versions will also allow you to delete or move your data.


= Other uses of rtcontrol with cron =

There are other useful commands besides ratio management you can perform on a regular basis, i.e. using a crontab. This one stops any torrent that isn't known by the tracker anymore or has other authorization problems:
{{{
rtcontrol is_open=yes 'message=*not?registered*,*unregistered*,*not?authorized*' --stop
}}}

And the following stops completed torrents that lost their data:
{{{
rtcontrol is_complete=yes is_open=yes is_ghost=yes --stop
}}}
Note that this means you can simply stop torrents by removing their data and calling this command afterwards, either manually or via `cron`.